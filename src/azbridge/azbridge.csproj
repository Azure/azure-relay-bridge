<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <WindowsOnly>false</WindowsOnly>
    <WindowsFrameworks Condition="'$(OS)'=='Windows_NT'">net462;</WindowsFrameworks>
    <CoreFrameworks Condition="'$(WindowsOnly)'!='true'">netcoreapp3.0</CoreFrameworks>
    <TargetFrameworks>$(WindowsFrameworks)$(CoreFrameworks)</TargetFrameworks>
    <!-- <TargetFrameworks>$(CoreFrameworks)</TargetFrameworks> -->
    <WindowsRuntimeIdentifiers Condition="'$(OS)'=='Windows_NT'">win7-x64;win7-x86;win10-x64;win10-x86;</WindowsRuntimeIdentifiers>
    <UnixRuntimeIdentifiers Condition="'$(WindowsOnly)'=='false'">osx-x64;debian.8-x64;ubuntu.16.10-x64;ubuntu.16.04-x64;opensuse-x64;ol-x64;rhel-x64;fedora-x64;centos-x64</UnixRuntimeIdentifiers>
    <RuntimeIdentifiers>$(WindowsRuntimeIdentifiers)$(UnixRuntimeIdentifiers)</RuntimeIdentifiers>
  </PropertyGroup>

  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <OutputType>Exe</OutputType>
    <OutputName>azbridge</OutputName>
    <Description>Azure Relay Bridge CLI</Description>
    <PackageTags>azure</PackageTags>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <OutputPath>bin\$(Configuration)\$(Platform)\</OutputPath>
    <WindowsOnly>false</WindowsOnly>
    <PackageMaintainer>Clemens Vasters &lt;clemensv@microsoft.com&gt;</PackageMaintainer>
    <PackageDescription>$(Description)</PackageDescription>
    <DebHomepage>https://azure.com</DebHomepage>
    <DebPriority>optional</DebPriority>
    <DebSection>contrib/net</DebSection>
  </PropertyGroup>
  

  <!-- <ItemGroup>
    <None Remove="azbridge_config.machine.yml" />
    <None Remove="azbridge_config.svc.yml" />
  </ItemGroup> -->

  <ItemGroup>
    <!-- <LinuxFolder Include="/etc/azbridge" Group="azbridge" Owner="azbridge" RemoveOnUninstall="true" /> -->
    <Content Include="azbridge_config.svc.yml" CopyToOutputDirectory="PreserveNewest">
      <LinuxPath>/etc/azbridge/azbridge_config.yml</LinuxPath>
    </Content>
    <Content Include="azbridge_config.machine.yml" CopyToOutputDirectory="PreserveNewest">
      <LinuxPath>/etc/azbridge/azbridge_config.yml</LinuxPath>
    </Content>
    <Content Include="debpostinst.sh" CopyToOutputDirectory="PreserveNewest"/>
    <Content Include="debpostrm.sh" CopyToOutputDirectory="PreserveNewest"/>
    <Content Include="../tools/Powershell/add-hostname.ps1" CopyToOutputDirectory="PreserveNewest" Condition="$(RuntimeIdentifier.StartsWith('win'))" />
    <Content Include="../tools/Powershell/remove-hostname.ps1" CopyToOutputDirectory="PreserveNewest" Condition="$(RuntimeIdentifier.StartsWith('win'))" />
    <Content Include="../tools/Powershell/get-hostname.ps1" CopyToOutputDirectory="PreserveNewest" Condition="$(RuntimeIdentifier.StartsWith('win'))" />
    <Content Include="../tools/bash/hostnames.sh" CopyToOutputDirectory="PreserveNewest" Condition="! $(RuntimeIdentifier.StartsWith('win'))" />
  </ItemGroup>

  <Choose>
    <When Condition="'$(TargetFramework)' == 'net462'">
      <ItemGroup>
        <Reference Include="System" />
        <Reference Include="System.ComponentModel.Composition" />
        <Reference Include="System.Configuration" />
        <Reference Include="System.Configuration.Install" />
        <Reference Include="System.Core" />
        <Reference Include="System.Xml.Linq" />
        <Reference Include="Microsoft.CSharp" />
        <Reference Include="System.Net.Http" />
        <Reference Include="System.ServiceProcess" />
        <Reference Include="System.Xml" />
      </ItemGroup>
    </When>
  </Choose>

  <ItemGroup>
    <PackageReference Include="McMaster.Extensions.CommandLineUtils" Version="$(McMasterExtensionsCommandLineUtilsPackageVersion)" />
    <PackageReference Include="System.Console" Version="$(SystemConsolePackageVersion)" />
    <PackageReference Include="System.IO" Version="$(SystemIOPackageVersion)" />
    <PackageReference Include="System.Memory" Version="$(SystemMemoryPackageVersion)" />
    <PackageReference Include="System.Net.Http" Version="$(SystemNetHttpPackageVersion)" />
    <PackageReference Include="System.Net.NameResolution" Version="$(SystemNetNameResolutionPackageVersion)" />
    <PackageReference Include="System.Diagnostics.DiagnosticSource" Version="$(SystemDiagnosticsDiagnosticSourcePackageVersion)" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="$(MicrosoftExtensionsLoggingPackageVersion)" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="$(MicrosoftExtensionsLoggingConsolePackageVersion)" />
    <PackageReference Include="Serilog.Extensions.Logging.File" Version="$(SerilogExtensionsLoggingFilePackageVersion)" />
    <PackageReference Include="Packaging.Targets" Version="$(PackagingTargetsPackageVersion)" />
  </ItemGroup>

  <PropertyGroup>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
  </PropertyGroup>

  <ItemGroup>
    <!--<DotNetCliToolReference Include="dotnet-rpm" Version="$(DotnetRpmPackageVersion)" />
    <DotNetCliToolReference Include="dotnet-deb" Version="$(DotnetDebPackageVersion)" />
    <DotNetCliToolReference Include="dotnet-tarball" Version="$(DotnetTarballPackageVersion)" />
    <DotNetCliToolReference Include="dotnet-zip" Version="$(DotnetZipPackageVersion)" />-->
  </ItemGroup>

  <Choose>
    <When Condition="'$(TargetFramework)' == 'net462'">
      <ItemGroup>
        <PackageReference Include="Microsoft.Diagnostics.Tracing.TraceEvent" Version="$(MicrosoftDiagnosticsTracingTraceEventPackageVersion)" />
        <PackageReference Include="Microsoft.Diagnostics.Tracing.EventSource" Version="$(MicrosoftDiagnosticsTracingEventSourcePackageVersion)" />
        <PackageReference Include="Wix" Version="$(WixPackageVersion)" />
      </ItemGroup>
    </When>
  </Choose>

  <Choose>
    <When Condition="'$(TargetFramework)' == 'net462'">
      <PropertyGroup>
        <DefineConstants>$(DefineConstants);USE_MDT_EVENTSOURCE</DefineConstants>
      </PropertyGroup>
    </When>
  </Choose>

  <ItemGroup>
    <ProjectReference Include="..\Microsoft.Azure.Relay.Bridge\Microsoft.Azure.Relay.Bridge.csproj">
      <Private>true</Private>
    </ProjectReference>
  </ItemGroup>

  <!-- Fedora, CentOS, and RHEL dependencies -->
  <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('rhel')) OR $(RuntimeIdentifier.StartsWith('fedora'))">
    <RpmDependency Include="libstdc++" Version="" />
    <RpmDependency Include="libunwind" Version="" />
    <RpmDependency Include="libicu" Version="" />
    <RpmDependency Include="compat-openssl10" Version="" />
  </ItemGroup>

  <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('centos'))">
    <!-- <RpmDependency Include="lttng-ust" Version=""/> -->
    <RpmDependency Include="libcurl" Version="" />
    <RpmDependency Include="openssl-libs" Version="" />
    <RpmDependency Include="krb5-libs" Version="" />
    <RpmDependency Include="libicu" Version="" />
    <RpmDependency Include="zlib" Version="" />
  </ItemGroup>

  <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('debian')) OR $(RuntimeIdentifier.StartsWith('ubuntu')) OR $(RuntimeIdentifier.StartsWith('linuxmint'))">
    <!-- <DebDependency Include="lttng-ust" Version=""/> -->
    <DebDependency Include="libcurl3" Version="" />
    <DebDependency Include="libssl1.0.0" Version="" />
    <DebDependency Include="libkrb5-3" Version="" />
    <DebDependency Include="zlib1g" Version="" />
    <DebDependency Include="libicu52" Version="" Condition="'$(RuntimeIdentifier)'=='debian.8' OR '$(RuntimeIdentifier)'=='ubuntu.14'" />
    <DebDependency Include="libicu55" Version="" Condition="'$(RuntimeIdentifier)'=='ubuntu.16'" />
    <DebDependency Include="libicu57" Version="" Condition="'$(RuntimeIdentifier)'=='debian.9' OR '$(RuntimeIdentifier)'=='ubuntu.17' OR '$(RuntimeIdentifier)'=='linuxmint.17'" />
    <DebDependency Include="libicu60" Version="" Condition="'$(RuntimeIdentifier)'=='debian.10' OR '$(RuntimeIdentifier)'=='ubuntu.18' OR '$(RuntimeIdentifier)'=='linuxmint.18'" />
  </ItemGroup>

  <PropertyGroup Condition="$(RuntimeIdentifier.StartsWith('debian')) OR $(RuntimeIdentifier.StartsWith('ubuntu')) OR $(RuntimeIdentifier.StartsWith('linuxmint'))">
    <!-- 
      The .DEB Packager doesn't correctly place files into  directories other
      than the target, so we create the profile startup file on the fly here.
      The profile startup file buts the tool on the path and also registers 
      the addhost and removehost bash extensions.

      DO NOT CHANGE THE FORMATTING BELOW.
      -->
    <PostInstallScript>. /usr/share/azbridge/debpostinst.sh</PostInstallScript>
    <PostRemoveScript>. /usr/share/azbridge/debpostrm.sh</PostRemoveScript>
  </PropertyGroup>


  <!-- Linux Daemon install properties -->
  <PropertyGroup Condition="$(UnixRuntimeIdentifiers.Contains($(RuntimeIdentifier)))">
    <CreateUser>false</CreateUser>
    <UserName>azbridge</UserName>
    <InstallService>false</InstallService>
  </PropertyGroup>

  <ItemGroup>
    <Compile Update="Strings.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Strings.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Strings.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Strings.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>


  <Target Name="GetTargetPath" Returns="@(WixGetTargetPath)">
    <ItemGroup>
      <WixGetTargetPath Include="$(MSBuildProjectDirectory)\$(OutputPath)\net462\$(AssemblyName).exe" />
    </ItemGroup>
  </Target>

  <Target Name="PackageZip" DependsOnTargets="CreateZip" Condition="$(RuntimeIdentifier.EndsWith($(PlatformTarget)))">
    <Copy SourceFiles="$(ZipPath)" DestinationFolder="$(BuildDir)/$(TargetFramework)" />
  </Target>
  <Target Name="PackageTarball" DependsOnTargets="CreateTarball" Condition="('$(TargetFramework)' == 'netcoreapp3.0') AND $(UnixRuntimeIdentifiers.Contains($(RuntimeIdentifier)))">
    <Copy SourceFiles="$(TarballPath)" DestinationFolder="$(BuildDir)/$(TargetFramework)" />
  </Target>
  <Target Name="PackageDebian" DependsOnTargets="CreateDeb" Condition="'$(OS)' == 'Unix' AND ('$(TargetFramework)' == 'netcoreapp3.0') AND ($(RuntimeIdentifier.StartsWith('ubuntu')) OR $(RuntimeIdentifier.StartsWith('debian')) OR $(RuntimeIdentifier.StartsWith('linuxmint')))">
    <Copy SourceFiles="$(DebPath)" DestinationFolder="$(BuildDir)/$(TargetFramework)" />
  </Target>
  <Target Name="PackageRpm" DependsOnTargets="CreateRpm" Condition="'$(OS)' == 'Unix' AND ('$(TargetFramework)' == 'netcoreapp3.0') AND ($(RuntimeIdentifier.StartsWith('rhel')) OR $(RuntimeIdentifier.StartsWith('centos')) OR $(RuntimeIdentifier.StartsWith('fedora')) OR $(RuntimeIdentifier.StartsWith('opensuse')) OR $(RuntimeIdentifier.StartsWith('ol')))">
    <Copy SourceFiles="$(RpmPath)" DestinationFolder="$(BuildDir)/$(TargetFramework)" />
  </Target>
  <Target Name="PackageWindows" DependsOnTargets="Publish" Condition="'$(OS)' == 'Windows_NT' AND '$(TargetFramework)' == 'net462' AND $(RuntimeIdentifier.StartsWith('win')) AND $(RuntimeIdentifier.EndsWith($(PlatformTarget)))">
    <PropertyGroup>
      <MsiDir>$(PublishDir)../msi</MsiDir>
      <_OutputName>azbridge_installer.$(PackageVersion).$(RuntimeIdentifier)</_OutputName>
    </PropertyGroup>
    <Exec WorkingDirectory="../azbridge-installer" Command="restore.cmd" />
    <!-- MUST USE 32-bit for WiX -->
    <Error Condition="'$(MSBuildToolsPath32)'==''" Text="MSBuildToolsPath32 is not set. MSI installers MUST be built with msbuild.exe and not with dotnet msbuild" />
    <Exec Command="&quot;$(MSBuildToolsPath32)\msbuild&quot; ../azbridge-installer/azbridge-installer.wixproj /t:Publish /p:TargetFramework=$(TargetFramework);RuntimeIdentifier=$(RuntimeIdentifier);BridgeProjectFile=$(MSBuildProjectFullPath);BridgePublishPath=$(MSBuildProjectDirectory)\$(PublishDir);OutputPath=$(MSBuildProjectDirectory)\$(MsiDir);OutputName=$(_OutputName);AlreadyPublished=true" />
    <Copy SourceFiles="$(MSBuildProjectDirectory)\$(MsiDir)\$(_OutputName).msi" DestinationFolder="$(BuildDir)/$(TargetFramework)" />
  </Target>
  <Target Name="PackageOSX" DependsOnTargets="Publish" Condition="'$(OS)' == 'Unix' AND ('$(TargetFramework)' == 'netcoreapp3.0') AND ($(RuntimeIdentifier.StartsWith('osx')))">

  </Target>
  <Target Name="PublishPackages" DependsOnTargets="PackageDebian;PackageRpm;PackageWindows;PackageOSX;PackageZip;PackageTarball" Condition=" '$(RuntimeIdentifier)' != ''">
    <Message Text="Target: $(PlatformTarget) $(RuntimeIdentifier) $(TargetFramework)" Importance="high" />
  </Target>

  <Target Name="PublishProjectIfFrameworkAndRIDSet" DependsOnTargets="PublishPackages" Condition=" '$(TargetFramework)' != ''  and '$(RuntimeIdentifier)' != ''" />
  <Target Name="PublishProjectForAllWindowsRIDsIfTargetFrameworkSet" Condition=" '$(TargetFramework)' != '' and '$(RuntimeIdentifier)' == '' and '$(OS)' == 'Windows_NT'">
    <ItemGroup>
      <_PublishRuntimeIdentifier Include="$(WindowsRuntimeIdentifiers)" />
    </ItemGroup>
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="Package" Properties="TargetFramework=$(TargetFramework);RuntimeIdentifier=%(_PublishRuntimeIdentifier.Identity)" />
  </Target>
  <Target Name="PublishProjectForAllUnixRIDsIfTargetFrameworkSet" Condition=" '$(TargetFramework)' != '' and '$(TargetFramework)' != 'net462' and '$(RuntimeIdentifier)' == ''  and ('$(OS)' == 'Unix' OR '$(WindowsOnly)'=='false')">
    <ItemGroup>
      <_PublishRuntimeIdentifier Include="$(UnixRuntimeIdentifiers)" />
    </ItemGroup>
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="Package" Properties="TargetFramework=$(TargetFramework);RuntimeIdentifier=%(_PublishRuntimeIdentifier.Identity)" />
  </Target>
  <Target Name="PublishProjectForAllFrameworksIfFrameworkUnset" Condition=" '$(TargetFramework)' == '' ">
    <ItemGroup>
      <_PublishFramework Include="$(TargetFrameworks)" />
    </ItemGroup>
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="Package" Properties="TargetFramework=%(_PublishFramework.Identity);RuntimeIdentifier=$(RuntimeIdentifier)" Condition="!('$(OS)' == 'Unix' AND '%(_PublishFramework.Identity)'=='net462')" />
  </Target>
  <Target Name="Package" DependsOnTargets="PublishProjectIfFrameworkAndRIDSet;PublishProjectForAllFrameworksIfFrameworkUnset;PublishProjectForAllUnixRIDsIfTargetFrameworkSet;PublishProjectForAllWindowsRIDsIfTargetFrameworkSet" />
</Project>
