<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <DisableOutOfProcTaskHost>true</DisableOutOfProcTaskHost>
    <PublishTrimmed>true</PublishTrimmed>
    <PublishSingleFile>false</PublishSingleFile>
    <SelfContained>true</SelfContained>
  </PropertyGroup>

  <ItemGroup>
    <RuntimeHostConfigurationOption Include="System.Globalization.Invariant" Value="true" />
  </ItemGroup> 

  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <OutputType>Exe</OutputType>
    <OutputName>azbridge</OutputName>
    <Description>Azure Relay Bridge CLI</Description>
    <PackageTags>azure</PackageTags>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <OutputPath>bin\$(Configuration)\$(Platform)\</OutputPath>
    <WindowsOnly>false</WindowsOnly>
    <PackageMaintainer>Clemens Vasters &lt;clemensv@microsoft.com&gt;</PackageMaintainer>
    <PackageDescription>$(Description)</PackageDescription>
    <DebHomepage>https://azure.com</DebHomepage>
    <DebPriority>optional</DebPriority>
    <DebSection>contrib/net</DebSection>
  </PropertyGroup>
  

  <ItemGroup>
    <LinuxFolder Include="/var/log/azbridge" Group="azbridge" Owner="azbridge" RemoveOnUninstall="true" Condition="! $(RuntimeIdentifier.StartsWith('win'))"/>
    <LinuxFolder Include="/etc/azbridge" Group="azbridge" Owner="azbridge" RemoveOnUninstall="true" Condition="! $(RuntimeIdentifier.StartsWith('win'))"/>
    <Content Include="azbridge_config.svc.yml" CopyToPublishDirectory="PreserveNewest" Condition="! $(RuntimeIdentifier.StartsWith('win'))">
      <LinuxPath>/etc/azbridge/azbridge_config.svc.yml</LinuxPath>
    </Content>
    <Content Include="azbridge_config.machine.yml" CopyToPublishDirectory="PreserveNewest" Condition="! $(RuntimeIdentifier.StartsWith('win'))">
      <LinuxPath>/etc/azbridge/azbridge_config.machine.yml</LinuxPath>
    </Content>
    <Content Include="azbridge.sh" CopyToPublishDirectory="PreserveNewest" Condition="! $(RuntimeIdentifier.StartsWith('win'))" RemoveOnUninstall="true">
      <LinuxPath>/etc/profile.d/azbridge.sh</LinuxPath>
      <LinuxFileMode Condition="!($(RuntimeIdentifier.StartsWith('rhel')) OR $(RuntimeIdentifier.StartsWith('fedora')) OR $(RuntimeIdentifier.StartsWith('opensuse')) OR $(RuntimeIdentifier.StartsWith('centos')))" >0555</LinuxFileMode>
    </Content>
    <Content Include="../tools/Powershell/add-hostname.ps1" CopyToPublishDirectory="PreserveNewest" Condition="$(RuntimeIdentifier.StartsWith('win'))" />
    <Content Include="../tools/Powershell/remove-hostname.ps1" CopyToPublishDirectory="PreserveNewest" Condition="$(RuntimeIdentifier.StartsWith('win'))" />
    <Content Include="../tools/Powershell/get-hostname.ps1" CopyToPublishDirectory="PreserveNewest" Condition="$(RuntimeIdentifier.StartsWith('win'))" />
  </ItemGroup>

  <PropertyGroup>
    <PostInstallScript>ln -sf /usr/share/azbridge/azbridge /usr/local/bin/azbridge</PostInstallScript>
    <PostRemoveScript>rm /usr/local/bin/azbridge</PostRemoveScript>
  </PropertyGroup>

  <Choose>
    <When Condition="'$(TargetFramework)' == 'net462'">
      <ItemGroup>
        <Reference Include="System" />
        <Reference Include="System.ComponentModel.Composition" />
        <Reference Include="System.Configuration" />
        <Reference Include="System.Configuration.Install" />
        <Reference Include="System.Core" />
        <Reference Include="System.Xml.Linq" />
        <Reference Include="Microsoft.CSharp" />
        <Reference Include="System.Net.Http" />
        <Reference Include="System.ServiceProcess" />
        <Reference Include="System.Xml" />
      </ItemGroup>
    </When>
  </Choose>

  <ItemGroup>
    <PackageReference Include="McMaster.Extensions.CommandLineUtils" Version="$(McMasterExtensionsCommandLineUtilsPackageVersion)" />
    <PackageReference Include="System.Console" Version="$(SystemConsolePackageVersion)" />
    <PackageReference Include="System.IO" Version="$(SystemIOPackageVersion)" />
    <PackageReference Include="System.Memory" Version="$(SystemMemoryPackageVersion)" />
    <PackageReference Include="System.Net.Http" Version="$(SystemNetHttpPackageVersion)" />
    <PackageReference Include="System.Net.NameResolution" Version="$(SystemNetNameResolutionPackageVersion)" />
    <PackageReference Include="System.Diagnostics.DiagnosticSource" Version="$(SystemDiagnosticsDiagnosticSourcePackageVersion)" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="$(MicrosoftExtensionsLoggingPackageVersion)" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="$(MicrosoftExtensionsLoggingConsolePackageVersion)" />
    <PackageReference Include="Serilog.Extensions.Logging.File" Version="$(SerilogExtensionsLoggingFilePackageVersion)" />
    <PackageReference Include="Packaging.Targets" Version="$(PackagingTargetsPackageVersion)" />
  </ItemGroup>

  <PropertyGroup>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
  </PropertyGroup>

   <Choose>
    <When Condition="'$(TargetFramework)' == 'net462'">
      <ItemGroup>
        <PackageReference Include="Microsoft.Diagnostics.Tracing.TraceEvent" Version="$(MicrosoftDiagnosticsTracingTraceEventPackageVersion)" />
        <PackageReference Include="Microsoft.Diagnostics.Tracing.EventSource" Version="$(MicrosoftDiagnosticsTracingEventSourcePackageVersion)" />
        <PackageReference Include="Wix" Version="$(WixPackageVersion)" />
      </ItemGroup>
    </When>
  </Choose>

  <Choose>
    <When Condition="'$(TargetFramework)' == 'net462'">
      <PropertyGroup>
        <DefineConstants>$(DefineConstants);USE_MDT_EVENTSOURCE</DefineConstants>
      </PropertyGroup>
    </When>
  </Choose>

  <ItemGroup>
    <ProjectReference Include="..\Microsoft.Azure.Relay.Bridge\Microsoft.Azure.Relay.Bridge.csproj">
      <Private>true</Private>
    </ProjectReference>
  </ItemGroup>

  <!-- Fedora, CentOS, and RHEL dependencies -->
  <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('rhel')) OR $(RuntimeIdentifier.StartsWith('fedora')) OR $(RuntimeIdentifier.StartsWith('ol'))">
    <RpmDependency Include="libstdc++" Version="" />
    <RpmDependency Include="libunwind" Version="" />
    <RpmDependency Include="libicu" Version="" />
  </ItemGroup>

  <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('rhel')) OR $(RuntimeIdentifier.StartsWith('fedora'))">
    <RpmDotNetDependency Include="compat-openssl10" Version="" />
  </ItemGroup>

  <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('ol'))">
    <RpmDotNetDependency Include="openssl-libs" Version="" />
  </ItemGroup>

  <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('centos'))">
    <!-- <RpmDependency Include="lttng-ust" Version=""/> -->
    <RpmDependency Include="libcurl" Version="" />
    <RpmDependency Include="openssl-libs" Version="" />
    <RpmDependency Include="krb5-libs" Version="" />
    <RpmDependency Include="libicu" Version="" />
    <RpmDependency Include="zlib" Version="" />
  </ItemGroup>

  <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('opensuse'))">
    <RpmDotNetDependency Include="libopenssl1_0_0" Version="" />
    <RpmDotNetDependency Include="libicu" Version="" />
    <RpmDotNetDependency Include="krb5" Version="" />
  </ItemGroup>

  <!-- Linux Daemon install properties -->
  <PropertyGroup Condition="$(UnixRuntimeIdentifiers.Contains($(RuntimeIdentifier)))">
    <CreateUser>true</CreateUser>
    <UserName>azbridge</UserName>
    <InstallService>false</InstallService>
    <SymlinkAppHostInBin>true</SymlinkAppHostInBin> 
  </PropertyGroup>

  <ItemGroup>
    <Compile Update="Strings.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Strings.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Strings.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Strings.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>


  <Target Name="GetTargetPath" Returns="@(WixGetTargetPath)">
    <ItemGroup>
      <WixGetTargetPath Include="$(MSBuildProjectDirectory)\$(OutputPath)\net462\$(AssemblyName).exe" />
    </ItemGroup>
  </Target>

  <Target Name="PackageZip" DependsOnTargets="CreateZip" Condition="$(RuntimeIdentifier.EndsWith($(PlatformTarget))) AND $(RuntimeIdentifier.StartsWith('win'))">
    <Copy SourceFiles="$(ZipPath)" DestinationFolder="$(BuildDir)/$(TargetFramework)" />
  </Target>
  <Target Name="PackageTarball" DependsOnTargets="CreateTarball" Condition="('$(TargetFramework)' == 'netcoreapp3.0') AND $(UnixRuntimeIdentifiers.Contains($(RuntimeIdentifier)))">
    <Copy SourceFiles="$(TarballPath)" DestinationFolder="$(BuildDir)/$(TargetFramework)" />
  </Target>
  <Target Name="PackageDebian" DependsOnTargets="CreateDeb" Condition="'$(OS)' == 'Unix' AND ('$(TargetFramework)' == 'netcoreapp3.0') AND ($(RuntimeIdentifier.StartsWith('ubuntu')) OR $(RuntimeIdentifier.StartsWith('debian')) OR $(RuntimeIdentifier.StartsWith('linuxmint')))">
    <Copy SourceFiles="$(DebPath)" DestinationFolder="$(BuildDir)/$(TargetFramework)" />
  </Target>
  <Target Name="PackageRpm" DependsOnTargets="CreateRpm" Condition="'$(OS)' == 'Unix' AND ('$(TargetFramework)' == 'netcoreapp3.0') AND ($(RuntimeIdentifier.StartsWith('rhel')) OR $(RuntimeIdentifier.StartsWith('centos')) OR $(RuntimeIdentifier.StartsWith('fedora')) OR $(RuntimeIdentifier.StartsWith('opensuse')) OR $(RuntimeIdentifier.StartsWith('ol')))">
    <Copy SourceFiles="$(RpmPath)" DestinationFolder="$(BuildDir)/$(TargetFramework)" />
  </Target>
  <Target Name="PackageWindows" DependsOnTargets="Publish" Condition="'$(OS)' == 'Windows_NT' AND '$(TargetFramework)' == 'net462' AND $(RuntimeIdentifier.StartsWith('win')) AND $(RuntimeIdentifier.EndsWith($(PlatformTarget)))">
    <PropertyGroup>
      <MsiDir>$(PublishDir)../msi</MsiDir>
      <_OutputName>azbridge_installer.$(PackageVersion).$(RuntimeIdentifier)</_OutputName>
    </PropertyGroup>
    <Exec WorkingDirectory="../azbridge-installer" Command="restore.cmd" />
    <!-- MUST USE 32-bit for WiX -->
    <Error Condition="'$(MSBuildToolsPath32)'==''" Text="MSBuildToolsPath32 is not set. MSI installers MUST be built with msbuild.exe and not with dotnet msbuild" />
    <Exec Command="&quot;$(MSBuildToolsPath32)\msbuild&quot; ../azbridge-installer/azbridge-installer.wixproj /t:Publish /p:TargetFramework=$(TargetFramework);RuntimeIdentifier=$(RuntimeIdentifier);BridgeProjectFile=$(MSBuildProjectFullPath);BridgePublishPath=$(MSBuildProjectDirectory)\$(PublishDir);OutputPath=$(MSBuildProjectDirectory)\$(MsiDir);OutputName=$(_OutputName);AlreadyPublished=true" />
    <Copy SourceFiles="$(MSBuildProjectDirectory)\$(MsiDir)\$(_OutputName).msi" DestinationFolder="$(BuildDir)/$(TargetFramework)" />
  </Target>
  <Target Name="PackageOSX" DependsOnTargets="Publish" Condition="'$(OS)' == 'Unix' AND ('$(TargetFramework)' == 'netcoreapp3.0') AND ($(RuntimeIdentifier.StartsWith('osx')))">

  </Target>
  <Target Name="PublishPackages" DependsOnTargets="PackageDebian;PackageRpm;PackageWindows;PackageOSX;PackageZip;PackageTarball" Condition=" '$(RuntimeIdentifier)' != ''">
    <Message Text="Target: $(PlatformTarget) $(RuntimeIdentifier) $(TargetFramework)" Importance="high" />
  </Target>

  <Target Name="PublishProjectIfFrameworkAndRIDSet" DependsOnTargets="PublishPackages" Condition=" '$(TargetFramework)' != ''  and '$(RuntimeIdentifier)' != ''" />
  <Target Name="PublishProjectForAllWindowsRIDsIfTargetFrameworkSet" Condition=" '$(TargetFramework)' != '' and '$(RuntimeIdentifier)' == '' and '$(OS)' == 'Windows_NT'">
    <ItemGroup>
      <_PublishRuntimeIdentifier Include="$(WindowsRuntimeIdentifiers)" />
    </ItemGroup>
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="Package" Properties="TargetFramework=$(TargetFramework);RuntimeIdentifier=%(_PublishRuntimeIdentifier.Identity)" />
  </Target>
  <Target Name="PublishProjectForAllUnixRIDsIfTargetFrameworkSet" Condition=" '$(TargetFramework)' != '' and '$(TargetFramework)' != 'net462' and '$(RuntimeIdentifier)' == ''  and ('$(OS)' == 'Unix' OR '$(WindowsOnly)'=='false')">
    <ItemGroup>
      <_PublishRuntimeIdentifier Include="$(UnixRuntimeIdentifiers)" />
    </ItemGroup>
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="Package" Properties="TargetFramework=$(TargetFramework);RuntimeIdentifier=%(_PublishRuntimeIdentifier.Identity)" />
  </Target>
  <Target Name="PublishProjectForAllFrameworksIfFrameworkUnset" Condition=" '$(TargetFramework)' == '' ">
    <ItemGroup>
      <_PublishFramework Include="$(TargetFrameworks)" />
    </ItemGroup>
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="Package" Properties="TargetFramework=%(_PublishFramework.Identity);RuntimeIdentifier=$(RuntimeIdentifier)" Condition="!('$(OS)' == 'Unix' AND '%(_PublishFramework.Identity)'=='net462')" />
  </Target>
  <Target Name="Package" DependsOnTargets="PublishProjectIfFrameworkAndRIDSet;PublishProjectForAllFrameworksIfFrameworkUnset;PublishProjectForAllUnixRIDsIfTargetFrameworkSet;PublishProjectForAllWindowsRIDsIfTargetFrameworkSet" />
</Project>
